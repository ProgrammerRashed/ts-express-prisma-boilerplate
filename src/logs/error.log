2025-06-06T16:59:50.809Z | ERROR   | ❌ [
  {
    "code": "invalid_type",
    "expected": "object",
    "received": "undefined",
    "path": [
      "body"
    ],
    "message": "Required"
  }
]
2025-06-06T17:18:41.445Z | ERROR   | ❌ Your are unauthorized
2025-06-06T17:37:01.276Z | ERROR   | ❌ Cannot read properties of undefined (reading 'email')
2025-06-06T17:46:25.962Z | ERROR   | ❌ 
Invalid `prisma.user.findUniqueOrThrow()` invocation in
/home/rashed/Desktop/PERSONAL-PROJECTS/QRCodeBackend/src/app/modules/Auth/auth.service.ts:11:38

   8 import AppError from "@middleware/AppError";
   9 
  10 const loginUser = async (payload: { email: string; password: string }) => {
→ 11   const userData = await prisma.user.findUniqueOrThrow(
An operation failed because it depends on one or more records that were required but not found. No record was found for a query.
2025-06-06T17:50:40.947Z | ERROR   | ❌ 
Invalid `prisma.user.findUniqueOrThrow()` invocation in
/home/rashed/Desktop/PERSONAL-PROJECTS/QRCodeBackend/src/app/modules/Auth/auth.service.ts:11:38

   8 import AppError from "@middleware/AppError";
   9 
  10 const loginUser = async (payload: { email: string; password: string }) => {
→ 11   const userData = await prisma.user.findUniqueOrThrow(
An operation failed because it depends on one or more records that were required but not found. No record was found for a query.
2025-06-06T17:53:31.226Z | ERROR   | ❌ 
Invalid `prisma.user.findUniqueOrThrow()` invocation in
/home/rashed/Desktop/PERSONAL-PROJECTS/QRCodeBackend/src/app/modules/Auth/auth.service.ts:11:38

   8 import AppError from "@middleware/AppError";
   9 
  10 const loginUser = async (payload: { email: string; password: string }) => {
→ 11   const userData = await prisma.user.findUniqueOrThrow(
An operation failed because it depends on one or more records that were required but not found. No record was found for a query.
2025-06-09T06:18:45.943Z | ERROR   | ❌ [
  {
    "code": "invalid_type",
    "expected": "object",
    "received": "undefined",
    "path": [
      "body"
    ],
    "message": "Required"
  }
]
2025-06-09T06:20:08.460Z | ERROR   | ❌ [
  {
    "code": "invalid_type",
    "expected": "object",
    "received": "undefined",
    "path": [
      "body"
    ],
    "message": "Required"
  }
]
2025-06-09T06:20:27.540Z | ERROR   | ❌ [
  {
    "code": "invalid_type",
    "expected": "object",
    "received": "undefined",
    "path": [
      "body"
    ],
    "message": "Required"
  }
]
2025-06-09T06:20:45.187Z | ERROR   | ❌ [
  {
    "code": "invalid_type",
    "expected": "object",
    "received": "undefined",
    "path": [
      "body"
    ],
    "message": "Required"
  }
]
2025-06-09T06:20:47.023Z | ERROR   | ❌ [
  {
    "code": "invalid_type",
    "expected": "object",
    "received": "undefined",
    "path": [
      "body"
    ],
    "message": "Required"
  }
]
2025-06-09T06:20:59.054Z | ERROR   | ❌ [
  {
    "code": "invalid_type",
    "expected": "object",
    "received": "undefined",
    "path": [
      "body"
    ],
    "message": "Required"
  }
]
2025-06-09T06:22:34.195Z | ERROR   | ❌ [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "body",
      "password"
    ],
    "message": "Password is required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "body",
      "name"
    ],
    "message": "Name is required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "body",
      "email"
    ],
    "message": "Email is required"
  }
]
2025-06-09T06:23:06.382Z | ERROR   | ❌ Unexpected token '"', ""body": {
"... is not valid JSON
2025-06-09T06:23:14.068Z | ERROR   | ❌ [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "body",
      "password"
    ],
    "message": "Password is required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "body",
      "name"
    ],
    "message": "Name is required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "body",
      "email"
    ],
    "message": "Email is required"
  }
]
2025-06-09T06:27:38.720Z | ERROR   | ❌ [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "body",
      "password"
    ],
    "message": "Password is required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "body",
      "name"
    ],
    "message": "Name is required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "body",
      "email"
    ],
    "message": "Email is required"
  }
]
2025-06-09T06:28:40.043Z | ERROR   | ❌ [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "body",
      "password"
    ],
    "message": "Password is required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "body",
      "name"
    ],
    "message": "Name is required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "body",
      "email"
    ],
    "message": "Email is required"
  }
]
2025-06-09T06:32:12.209Z | ERROR   | ❌ [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "body",
      "password"
    ],
    "message": "Password is required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "body",
      "name"
    ],
    "message": "Name is required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "body",
      "email"
    ],
    "message": "Email is required"
  }
]
2025-06-09T06:32:37.479Z | ERROR   | ❌ Illegal arguments: undefined, number
2025-06-09T06:34:24.485Z | ERROR   | ❌ Email already exists. Please use another email.
2025-06-09T06:51:47.042Z | ERROR   | ❌ Your are unauthorized
2025-06-09T06:53:48.318Z | ERROR   | ❌ Your are unauthorized
2025-06-09T06:53:52.484Z | ERROR   | ❌ Your are unauthorized
2025-06-09T06:55:14.458Z | ERROR   | ❌ Your are unauthorized
2025-06-09T06:59:07.309Z | ERROR   | ❌ Your are unauthorized
2025-06-09T06:59:50.282Z | ERROR   | ❌ Your are unauthorized
2025-06-09T07:02:47.841Z | ERROR   | ❌ invalid token
2025-06-09T07:02:57.073Z | ERROR   | ❌ invalid token
2025-06-09T07:05:17.646Z | ERROR   | ❌ invalid token
2025-06-09T07:09:16.434Z | ERROR   | ❌ Cannot read properties of undefined (reading 'user')
2025-06-09T07:10:21.405Z | ERROR   | ❌ Cannot set properties of undefined (setting 'user')
2025-06-09T07:12:03.123Z | ERROR   | ❌ Cannot read properties of undefined (reading 'user')
2025-06-09T07:14:13.804Z | ERROR   | ❌ Cannot set properties of undefined (setting 'user')
2025-06-09T07:18:50.060Z | ERROR   | ❌ [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "name"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "targetUrl"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "boolean",
    "received": "undefined",
    "path": [
      "trackingEnabled"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "creatorId"
    ],
    "message": "Required"
  }
]
2025-06-09T07:22:14.248Z | ERROR   | ❌ [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "name"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "targetUrl"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "boolean",
    "received": "undefined",
    "path": [
      "trackingEnabled"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "creatorId"
    ],
    "message": "Required"
  }
]
2025-06-09T07:23:48.983Z | ERROR   | ❌ [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "name"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "targetUrl"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "boolean",
    "received": "undefined",
    "path": [
      "trackingEnabled"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "creatorId"
    ],
    "message": "Required"
  }
]
2025-06-09T07:29:12.006Z | ERROR   | ❌ [
  {
    "code": "invalid_type",
    "expected": "boolean",
    "received": "string",
    "path": [
      "trackingEnabled"
    ],
    "message": "Expected boolean, received string"
  }
]
2025-06-09T07:30:25.164Z | ERROR   | ❌ [
  {
    "code": "invalid_type",
    "expected": "boolean",
    "received": "string",
    "path": [
      "trackingEnabled"
    ],
    "message": "Expected boolean, received string"
  }
]
2025-06-09T07:33:44.704Z | ERROR   | ❌ You are unauthorized
2025-06-09T10:25:36.218Z | ERROR   | ❌ 
Invalid `prisma.qRCode.create()` invocation in
/home/rashed/Desktop/PERSONAL-PROJECTS/QRCodeBackend/src/app/modules/QRCode/qr-code.service.ts:7:49

  4 const createQRCode = async (req: Request) => {
  5 
  6   console.log("qr-cody-body", req.body)
→ 7   const createdQRCodeData = await prisma.qRCode.create({
        name: "'Test QR Code'",
        ~~~~
        description: "This is a test description",
        targetUrl: "http://localhost:3000/api/v1/auth/login",
        trackingEnabled: true,
        creatorId: "d8838466-f285-421e-b6f9-81e796278682",
      ? data?: QRCodeCreateInput | QRCodeUncheckedCreateInput
      })

Unknown argument `name`. Did you mean `data`? Available options are marked with ?.
2025-06-09T10:28:24.825Z | ERROR   | ❌ 
Invalid `prisma.qRCode.create()` invocation in
/home/rashed/Desktop/PERSONAL-PROJECTS/QRCodeBackend/src/app/modules/QRCode/qr-code.service.ts:7:49

  4 const createQRCode = async (req: Request) => {
  5 
  6   console.log("qr-cody-body", req.body)
→ 7   const createdQRCodeData = await prisma.qRCode.create({
        name: "Test QR Code",
        ~~~~
        description: "This is a test description",
        targetUrl: "http://localhost:3000/api/v1/auth/login",
        trackingEnabled: true,
        creatorId: "d8838466-f285-421e-b6f9-81e796278682",
      ? data?: QRCodeCreateInput | QRCodeUncheckedCreateInput
      })

Unknown argument `name`. Did you mean `data`? Available options are marked with ?.
2025-06-09T10:31:17.704Z | ERROR   | ❌ [
  {
    "validation": "url",
    "code": "invalid_string",
    "message": "Must be a valid URL",
    "path": [
      "targetUrl"
    ]
  }
]
2025-06-09T10:32:34.074Z | ERROR   | ❌ [
  {
    "validation": "url",
    "code": "invalid_string",
    "message": "Must be a valid URL",
    "path": [
      "targetUrl"
    ]
  }
]
2025-06-09T10:33:11.105Z | ERROR   | ❌ [
  {
    "validation": "url",
    "code": "invalid_string",
    "message": "Must be a valid URL",
    "path": [
      "targetUrl"
    ]
  }
]
2025-06-09T10:34:45.728Z | ERROR   | ❌ [
  {
    "validation": "url",
    "code": "invalid_string",
    "message": "Must be a valid URL",
    "path": [
      "targetUrl"
    ]
  }
]
2025-06-10T07:02:34.753Z | ERROR   | ❌ You are unauthorized
2025-06-10T07:02:46.548Z | ERROR   | ❌ 
Invalid `prisma.qRCode.create()` invocation in
/home/rashed/Desktop/PERSONAL-PROJECTS/QRCodeBackend/src/app/modules/QRCode/qr-code.service.ts:9:49

  6 
  7 // CREATE QR CODE
  8 const createQRCode = async (req: Request) => {
→ 9   const createdQRCodeData = await prisma.qRCode.create({
      + data: QRCodeCreateInput | QRCodeUncheckedCreateInput
      })

Argument `data` is missing.
2025-06-10T08:52:55.073Z | ERROR   | ❌ [
  {
    "code": "invalid_type",
    "expected": "object",
    "received": "undefined",
    "path": [
      "body"
    ],
    "message": "Required"
  }
]
2025-06-10T08:54:29.369Z | ERROR   | ❌ Password incorrect!
2025-06-10T08:54:56.345Z | ERROR   | ❌ Password incorrect!
2025-06-10T08:55:41.310Z | ERROR   | ❌ Password incorrect!
2025-06-10T08:56:48.611Z | ERROR   | ❌ Password incorrect!
2025-06-10T09:01:02.364Z | ERROR   | ❌ Password incorrect!
2025-06-10T09:01:50.774Z | ERROR   | ❌ Password incorrect!
2025-06-10T09:06:12.101Z | ERROR   | ❌ Password incorrect!
2025-06-10T09:09:22.370Z | ERROR   | ❌ Password incorrect!
2025-06-10T09:10:07.448Z | ERROR   | ❌ Password incorrect!
2025-06-10T09:13:16.453Z | ERROR   | ❌ Password incorrect!
2025-06-10T09:13:28.387Z | ERROR   | ❌ Password incorrect!
2025-06-10T09:14:10.395Z | ERROR   | ❌ Password incorrect!
2025-06-10T09:15:13.544Z | ERROR   | ❌ Password incorrect!
2025-06-10T09:15:16.758Z | ERROR   | ❌ Password incorrect!
2025-06-10T09:23:52.631Z | ERROR   | ❌ Password incorrect!
2025-06-10T09:26:14.945Z | ERROR   | ❌ Password incorrect!
2025-06-10T09:36:43.483Z | ERROR   | ❌ Password incorrect!
2025-06-10T12:04:40.245Z | ERROR   | ❌ 
Invalid `prisma.scan.findFirst()` invocation in
/home/rashed/Desktop/PERSONAL-PROJECTS/QRCodeBackend/src/app/modules/QRCode/qr-code.service.ts:46:42

  43   throw new AppError(StatusCodes.BAD_REQUEST, "Missing QR ID or fingerprint");
  44 }
  45 
→ 46 const existingScan = await prisma.scan.findFirst(
The column `scans.qr_id` does not exist in the current database.
2025-06-10T12:05:16.739Z | ERROR   | ❌ 
Invalid `prisma.scan.findFirst()` invocation in
/home/rashed/Desktop/PERSONAL-PROJECTS/QRCodeBackend/src/app/modules/QRCode/qr-code.service.ts:46:42

  43   throw new AppError(StatusCodes.BAD_REQUEST, "Missing QR ID or fingerprint");
  44 }
  45 
→ 46 const existingScan = await prisma.scan.findFirst(
The column `scans.qr_id` does not exist in the current database.
2025-06-10T12:07:06.283Z | ERROR   | ❌ 
Invalid `prisma.scan.findFirst()` invocation in
/home/rashed/Desktop/PERSONAL-PROJECTS/QRCodeBackend/src/app/modules/QRCode/qr-code.service.ts:46:42

  43   throw new AppError(StatusCodes.BAD_REQUEST, "Missing QR ID or fingerprint");
  44 }
  45 
→ 46 const existingScan = await prisma.scan.findFirst(
The column `scans.qr_id` does not exist in the current database.
2025-06-10T12:20:57.223Z | ERROR   | ❌ You are unauthorized
